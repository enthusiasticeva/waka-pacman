/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ghost;

import org.junit.jupiter.api.Test;

import processing.core.PApplet;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {

  @Test 
  public void constructorTest() {
    App app = new App("map.txt");
    assertNotNull(app);
    assertNotNull(app.getConfig());
    assertNotNull(app.getGhosts());
    assertEquals(-1, app.getEndScreenStartFrame());
    assertNotNull(app.getWaka());
  }


  @Test
  public void setupTest() {
    App app = new App("map.txt");
    PApplet.runSketch(new String[] {"testing"}, app);
    app.setup();
    for (cellType c: cellType.values()) {
      if (c != cellType.Empty && c != cellType.GhostStart && c!= cellType.WakaStart) {
        assertNotNull(c.getSprite());
      } else {
        assertNull(c.getSprite());
      }
    }

    for (Direction d: Direction.values()) {
      assertNotNull(d.getSprite());
    }

    for (ghostType g: ghostType.values()) {
      assertNotNull(g.getSprite());
    }

    assertNotNull(Ghost.getFrightenedSprite());

    assertNotNull(Waka.getClosedSprite());

    assertNotNull(app.getWaka().getSprite());

    assertNotNull(app.getFont());
  }

  @Test
  public void testKeyPressed() {
    App app = new App("map.txt");
    assertFalse(app.getGhosts().get(0).debugMode);
    app.keyCode = 32;
    app.keyPressed();
    assertTrue(app.getGhosts().get(0).debugMode);

    app.keyCode = 37;
    app.keyPressed();
    assertEquals(app.getWaka().getNextDirection(), Direction.left);

    app.keyCode = 38;
    app.keyPressed();
    assertEquals(app.getWaka().getNextDirection(), Direction.up);

    app.keyCode = 39;
    app.keyPressed();
    assertEquals(app.getWaka().getNextDirection(), Direction.right);

    app.keyCode = 40;
    app.keyPressed();
    assertEquals(app.getWaka().getNextDirection(), Direction.down);

    app.keyCode = 36;
    app.keyPressed();
    assertEquals(app.getWaka().getNextDirection(), Direction.down);

    app.keyCode = 41;
    app.keyPressed();
    assertEquals(app.getWaka().getNextDirection(), Direction.down);
  }

  @Test
  public void testDraw() {
    App app = new App("map.txt");
    PApplet.runSketch(new String[] {"testing"}, app);
    app.setup();

    app.draw();

    app.getWaka().setLives(-1);

    app.draw();

    app.getWaka().setLives(3);

    app.getMap().setFruitCurrent(app.getMap().getFruitTotal());

    app.draw();

  }
}
